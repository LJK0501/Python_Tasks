# -*- coding: utf-8 -*-
"""중간고사_금융기록_DB이관.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LKjc76ImCQBmdJ5YmfLPYVhfU0-v2UFB
"""

# # colab 전용
# from google.colab import drive
# drive.mount('/content/gdrive')

# !pip install pandas==2.2.2

import pandas as pd
#ㅊdataPath = "/content/gdrive/MyDrive/Colab Notebooks/fintech_edu_2025/ETL 중간고사" # colab 전용
#dataPath = "C:/Users/SMT25/OneDrive - 한국폴리텍대학/바탕 화면/중간고사" #local jupyter lab 전용
#리눅스 전용
dataPath = "/home/kopo/middleExam/dataset" # 리눅스 전용

# !pip install mysql-connector-python
# !pip install -U sqlalchemy==2.0.40
# !pip install -U PyMySQL==1.1.1

import json

# with open("/content/gdrive/MyDrive/Colab Notebooks/db_config.json", "r+") as jsonData:
#     db_config = json.load(jsonData)

# loca jupyter lab 전용
# with open("C:/Users/SMT25/.middleTest/db_config.json", "r+") as jsonData:
#     db_config = json.load(jsonData)

#리눅스 전용
with open("/home/kopo/middleExam/codeset/db_config.json", "r+") as jsonData:
    db_config = json.load(jsonData)

### 리눅스 안에서는 3306
import time
import os
import datetime
import pytz

from sqlalchemy import create_engine
dataFileNames = os.listdir(dataPath)
now = datetime.datetime.now(pytz.timezone('Asia/Seoul'))
nowType = now.strftime("%Y-%m-%d %H:%M:%S")

totalData = []
Time_Tag = []
resultData = []

for i in range(0, len(dataFileNames)) :
    totalData.append( pd.read_csv(dataPath+"/"+dataFileNames[i], encoding='ms949') )
    
    Time_Tag = []  # 초기화
    for j in range(0, len(totalData[i])) :
        Time_Tag .append(nowType)
    resultData.append(pd.concat(  [pd.DataFrame(Time_Tag,columns =['Time_Tag_'+str(i)]),pd.DataFrame(totalData[i]) ], axis=1) )

    columnName = resultData[i].columns # 열이름 가져오기
    for j in range(0, len(columnName)) :
        if(columnName[j].find("date")>0) :
            date= columnName[j]
            break;

    resultDataCopy = resultData[i].copy()  ## copy를 안하면 기존 dataFrame을 수정한다고 warning이 나온다.

    dateData =resultDataCopy[date].copy()
    for j in range(0, len(dateData)) :
        partData = dateData[j].split("-")
        if(len(partData[0]) != 4)  : #년도 전처리
            dateData[j] = "(년도 오류)" + dateData[j]
        if(len(partData[1]) != 2) : #월 전처리
            if(len(partData[1])==1) :
                dateData[j] = "0"+ dateData[j]
            elif(len(partData[1])>2) :
                dateData[j] = "(월 오류)" + dateData[j]
        if(len(partData[2]) != 2) : #일 전처리
            if(len(partData[2])==1) :
                dateData[j] = "0"+ dateData[j]
            elif(len(partData[2])>2) :
                dateData[j] = "(일 오류)" + dateData[j]
    resultDataCopy[date] = dateData

    # Time_Tag = []
    dataName = dataFileNames[i].split(".")
    engine = create_engine(f"mysql+mysqlconnector://{db_config['user']}:{db_config['password']}@{db_config['host']}:{db_config['port']}/{db_config['database']}")

    try:
        resultDataCopy.to_sql(name= dataName[0],index=False, if_exists="append", con=engine)
        print("DB이관 완료")
        time.sleep(4)
    except Exception as e:
        print(e)


        
