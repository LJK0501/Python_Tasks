# -*- coding: utf-8 -*-
"""중간고사_금융기록_DB생성.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ksJh6LRz66xJAs0SRrQB3hXY93ReY8IJ
"""
import json
import pandas as pd
import time
from sqlalchemy import create_engine

time.sleep(5)

with open("/home/kopo/middleExam/codeset/db_config.json", "r+") as jsonData:
    db_config = json.load(jsonData)

engine = create_engine(f"mysql+mysqlconnector://{db_config['user']}:{db_config['password']}@{db_config['host']}:{db_config['port']}/{db_config['database']}")

import datetime
import pytz

# 한국 시간대 설정
now = datetime.datetime.now(pytz.timezone('Asia/Seoul'))
nowType = now.strftime("%Y-%m-%d %H:%M:%S")

sqlSelect = """
SELECT G.Time_Tag, 
        G.name, 
        G.birth_date, 
        G.gender, 
        G.account_id, 
        G.old_balance, 
        G.new_balance
FROM
(
    SELECT   CONVERT_TZ(CURRENT_TIMESTAMP, '+00:00', '+09:00') AS Time_Tag,  -- UTC에서 한국 시간으로 변환
            F.name,
            F.name_order,
            F.birth_date,
            F.gender,
            F.account_id,
            F.balance AS old_balance,
            CASE
                WHEN transaction_type = 'Withdraw' THEN F.balance - F.amount
                ELSE F.balance + F.amount
            END AS new_balance
    FROM
    (
        SELECT D.account_id,
               D.balance,
               D.amount,
               D.transaction_type,
               E.name,
               CAST(SUBSTR(E.name, 9) AS UNSIGNED) AS name_order,
               E.birth_date,
               E.gender,
               E.join_date
        FROM
        (
            SELECT C.*
            FROM (
                SELECT A.account_id,
                       A.customer_id,
                       A.balance,
                       A.account_type,
                       B.amount,
                       B.transaction_type
                FROM account_info A
                LEFT JOIN transaction_info B
                    ON A.account_id = B.account_id
            ) C
        ) D
        LEFT JOIN customer_info E
            ON D.customer_id = E.customer_id
    ) F
    ORDER BY F.name_order
) G
WHERE SUBSTR(G.birth_date, 1, 1) != '('
GROUP BY G.Time_Tag, G.name, G.birth_date, G.gender, G.account_id, G.old_balance, G.new_balance
ORDER BY G.Time_Tag;
"""
 

# sqlSelect2 = """
# SELECT *
# FROM customer_account
# order by name_order
# """
mysql_selloutDf = pd.read_sql_query(sqlSelect, con=engine)
# mysql_selloutDf2 = pd.read_sql_query(sqlSelect2, con=engine)
try:
    mysql_selloutDf.to_sql(name="customer_account", con = engine, if_exists="append",index=False)
    print("DB생성 완료")
except Exception as e:
    print(e)
